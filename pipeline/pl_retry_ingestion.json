{
	"name": "pl_retry_ingestion",
	"properties": {
		"activities": [
			{
				"name": "Set Variables",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "retryCount",
					"value": ""
				}
			},
			{
				"name": "Retry Until Success",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "Set Variables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@not(variables('isSuccess'))",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Execute Ingestion",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "Fail_Pipeline",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true
							}
						},
						{
							"name": "Check Success",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Execute Ingestion",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(activity('Execute Ingestion').output.status, 'Succeeded')",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Temp Increment Retry",
										"type": "SetVariable",
										"dependsOn": [],
										"policy": {
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"variableName": "temp",
											"value": {
												"value": "@add(variables('retryCount'),1)",
												"type": "Expression"
											}
										}
									},
									{
										"name": "Check Retry Limit",
										"type": "IfCondition",
										"dependsOn": [
											{
												"activity": "Increment Retry",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"expression": {
												"value": "@equals(variables('retryCount'), 3)",
												"type": "Expression"
											},
											"ifTrueActivities": [
												{
													"name": "Log Failure",
													"type": "StoredProcedure",
													"state": "Inactive",
													"onInactiveMarkAs": "Succeeded",
													"dependsOn": [],
													"policy": {
														"retry": 0,
														"retryIntervalInSeconds": 30,
														"secureOutput": false,
														"secureInput": false
													},
													"userProperties": [],
													"typeProperties": {
														"storedProcedureName": "sp_log_failure",
														"storedProcedureParameters": {
															"message": {
																"value": "Ingestion failed after 3 attempts.",
																"type": "String"
															}
														}
													},
													"linkedServiceName": {
														"referenceName": "LS_SQL_LogDB",
														"type": "LinkedServiceReference"
													}
												},
												{
													"name": "Send Email Notification",
													"type": "WebActivity",
													"state": "Inactive",
													"onInactiveMarkAs": "Succeeded",
													"dependsOn": [],
													"policy": {
														"retry": 0,
														"retryIntervalInSeconds": 30,
														"secureOutput": false,
														"secureInput": false
													},
													"userProperties": [],
													"typeProperties": {
														"method": "POST",
														"headers": {
															"Content-Type": "application/json"
														},
														"url": "<LogicAppTriggerURL>",
														"body": {
															"subject": "Data Ingestion Failure",
															"message": "Ingestion failed after 3 retries."
														}
													}
												},
												{
													"name": "Set variable1",
													"type": "SetVariable",
													"dependsOn": [],
													"policy": {
														"secureOutput": false,
														"secureInput": false
													},
													"userProperties": [],
													"typeProperties": {
														"variableName": "pipelineReturnValue",
														"value": [
															{
																"key": "varsuccess",
																"value": {
																	"type": "String",
																	"content": "email sent"
																}
															}
														],
														"setSystemVariable": true
													}
												}
											]
										}
									},
									{
										"name": "Increment Retry",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "Temp Increment Retry",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"variableName": "retryCount",
											"value": {
												"value": "@variables('temp')",
												"type": "Expression"
											}
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "Set Success True",
										"type": "SetVariable",
										"dependsOn": [],
										"policy": {
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"variableName": "isSuccess",
											"value": {
												"value": "@activity('Execute Ingestion').output",
												"type": "Expression"
											}
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"variables": {
			"retryCount": {
				"type": "Int",
				"defaultValue": "0"
			},
			"isSuccess": {
				"type": "Bool",
				"defaultValue": "false"
			},
			"regionTrue": {
				"type": "Array"
			},
			"temp": {
				"type": "Integer",
				"defaultValue": 0
			}
		},
		"annotations": []
	}
}