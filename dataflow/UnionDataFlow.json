{
	"name": "UnionDataFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Class18_DataFlow_Parameter_DataSet",
						"type": "DatasetReference"
					},
					"name": "DepartmentSource"
				},
				{
					"dataset": {
						"referenceName": "Class18_DataFlow_Parameter_DataSet",
						"type": "DatasetReference"
					},
					"name": "EmployeeSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Class18_DataFlow_Parameter_DataSet",
						"type": "DatasetReference"
					},
					"name": "SinkDataLake",
					"rejectedDataLinkedService": {
						"referenceName": "AzureDataLakeStorage",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "UnionDepartmentEmployee"
				}
			],
			"scriptLines": [
				"source(output(",
				"          DepartmentID as short,",
				"          DepartmentName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DepartmentSource",
				"source(output(",
				"          EmployeeID as short,",
				"          FirstName as string,",
				"          LastName as string,",
				"          DateOfBirth as date 'MM/dd/yyyy',",
				"          Gender as string,",
				"          DepartmentID as short,",
				"          Salary as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     partitionBy('hash', 1)) ~> EmployeeSource",
				"DepartmentSource, EmployeeSource union(byName: true,",
				"     partitionBy('hash', 1))~> UnionDepartmentEmployee",
				"UnionDepartmentEmployee sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          year as string,",
				"          rank as string,",
				"          country as string,",
				"          state as string,",
				"          gdp as string,",
				"          gdp_percent as string",
				"     ),",
				"     partitionFileNames:['UnionData.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> SinkDataLake"
			]
		}
	}
}